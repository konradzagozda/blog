name: Deploy to AWS

on:
  push:
    branches: [main]

# Add concurrency to ensure sequential execution test
concurrency: 
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.9.0"

      - name: Install Terragrunt
        run: |
          TERRAGRUNT_VERSION=v0.69.13
          wget -O terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/$TERRAGRUNT_VERSION/terragrunt_linux_amd64
          chmod +x terragrunt
          sudo mv terragrunt /usr/local/bin/terragrunt

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: v0.50.3

      - name: Initialize TFLint
        working-directory: tf
        run: tflint --init
        
      - name: Run TFLint
        working-directory: tf
        run: tflint -f compact --recursive

      - name: Terragrunt Format Check
        working-directory: tf/environments/prod
        run: terragrunt hclfmt --terragrunt-check --terragrunt-non-interactive

      - name: Build Frontend
        working-directory: tf
        run: ./build.sh 

      # STAGING DEPLOYMENT

      - name: STAGING - Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.STG_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.STG_AWS_SECRET_ACCESS_KEY }}

      - name: STAGING - Terragrunt Validate
        working-directory: tf/environments/stg
        run: terragrunt validate --terragrunt-non-interactive

      - name: STAGING - Terragrunt Plan
        working-directory: tf/environments/stg
        run: terragrunt plan -out=tfplan --terragrunt-non-interactive

      - name: STAGING - Terragrunt Apply
        working-directory: tf/environments/stg
        run: terragrunt apply tfplan --terragrunt-non-interactive

      - name: STAGING - Deploy
        working-directory: tf
        run: ./deploy.sh stg
      
      # PRODUCTION DEPLOYMENT

      - name: PRODUCTION - Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: PRODUCTION - Terragrunt Validate
        working-directory: tf/environments/prod
        run: terragrunt validate --terragrunt-non-interactive

      - name: PRODUCTION - Terragrunt Plan
        working-directory: tf/environments/prod
        run: terragrunt plan -out=tfplan --terragrunt-non-interactive
      
      - name: Manual Approval for Production Deploy
        uses: trstringer/manual-approval@v1.9.1
        with:
          secret: ${{ github.TOKEN }}
          approvers: konradzagozda
          minimum-approvals: 1
          issue-title: "Deploying to Production"
          issue-body: |
            A production deployment has been requested.
            
            Please review the plan output above and approve or deny this deployment.
            
            Approve with: approve, approved, lgtm, yes
            Deny with: deny, denied, no

      - name: PRODUCTION - Terragrunt Apply
        working-directory: tf/environments/prod
        run: terragrunt apply tfplan --terragrunt-non-interactive

      - name: PRODUCTION - Deploy
        working-directory: tf
        run: ./deploy.sh prod

