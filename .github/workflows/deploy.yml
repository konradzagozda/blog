name: Deploy to AWS

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          mask-aws-account-id: true

      - name: Install dependencies
        working-directory: frontend
        run: yarn install

      - name: Build
        working-directory: frontend
        run: yarn build

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.9.0"

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: v0.50.3

      - name: Initialize TFLint
        working-directory: tf
        run: tflint --init
        
      - name: Run TFLint
        working-directory: tf
        run: tflint -f compact

      - name: Terraform Format Check
        working-directory: tf
        run: terraform fmt -check

      - name: Terraform Init
        working-directory: tf
        run: terraform init

      - name: Terraform Validate
        working-directory: tf
        run: terraform validate

      - name: Terraform Plan
        working-directory: tf
        run: terraform plan -out=tfplan
      
      - name: Terraform Apply
        working-directory: tf
        run: terraform apply tfplan

      - name: Deploy to S3
        working-directory: tf
        run: |
          aws s3 sync ../frontend/dist/ s3://$(terraform output -raw website_bucket_name)
          aws cloudfront create-invalidation --distribution-id $(terraform output -raw cloudfront_distribution_id) --paths "/*"
